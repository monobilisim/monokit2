name: Go Build & Release

on:
  push:
    branches:
      - main # devel builds on main branch
    tags:
      - "v*" # full releases for main binary
      - "*-v*" # full releases for plugins
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Go 1.25
        uses: actions/setup-go@v4
        with:
          go-version: 1.25

      - name: Build binaries
        id: build
        run: |
          mkdir -p ./bin
          TAG_NAME=${GITHUB_REF##*/}

          if [[ "$TAG_NAME" == v* ]]; then
            # Main release
            go build -ldflags "-X 'main.version=$TAG_NAME'" -o ./bin/monokit2 ./main.go

          elif [[ "$TAG_NAME" == *-v* ]]; then
            # Plugin release (dynamic plugin name)
            PLUGIN_NAME=${TAG_NAME%%-*}
            cd plugins/$PLUGIN_NAME
            go build -ldflags "-X 'main.version=$TAG_NAME'" --tags=$PLUGIN_NAME -o ../bin/

          else
            # Always build the main devel binary
            go build -ldflags "-X 'main.version=DEVEL'" -o ./bin/monokit2 ./main.go

            ACTIVE_PLUGINS=(osHealth)
            # Build devel binaries for active plugins
            for PLUGIN_NAME in "${ACTIVE_PLUGINS[@]}" ; do
              cd plugins/$PLUGIN_NAME || exit 1
              go build -ldflags "-X 'main.version=DEVEL'" --tags="$PLUGIN_NAME" -o ../bin/${PLUGIN_NAME}
              cd ../..
            done
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: go-binaries
          path: |
            bin/
            plugins/bin/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: go-binaries
          path: .

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Create normal release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release binary
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/*
            plugins/bin/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  devel-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: go-binaries
          path: .

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Delete existing devel prerelease (if exists)
        run: |
          set -e
          DEVEL_TAG="devel"
          if gh release view "$DEVEL_TAG" &>/dev/null; then
            echo "Deleting existing devel release: $DEVEL_TAG"
            gh release delete "$DEVEL_TAG" --yes
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create devel prerelease
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "devel"
          name: Devel Release (Latest)
          prerelease: true
          files: |
            bin/*
            plugins/bin/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
