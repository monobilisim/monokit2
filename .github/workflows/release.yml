name: Go Build & Release

on:
  push:
    branches:
      - main # devel builds on main branch
    tags:
      - "v*" # full releases for main binary
      - "*-v*" # full releases for plugins
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Go 1.25
        uses: actions/setup-go@v4
        with:
          go-version: 1.25

      - name: Build binaries
        id: build
        run: |
          mkdir -p ./bin
          TAG_NAME=${GITHUB_REF##*/}

          if [[ "$TAG_NAME" == v* ]]; then
            ALL_BINARIES=""

            # Main release
            go build -o ./bin/monokit2 ./main.go
            ALL_BINARIES="bin/monokit2"

          elif [[ "$TAG_NAME" == *-v* ]]; then
            ALL_BINARIES=""

            # Plugin release (dynamic plugin name)
            PLUGIN_NAME=${TAG_NAME%%-*}
            go build -tags $PLUGIN_NAME -o ./bin/$PLUGIN_NAME ./main.go
            ALL_BINARIES="bin/$PLUGIN_NAME"

          else
            ALL_BINARIES=""

            # Always build the main devel binary
            go build -o ./bin/monokit2-devel ./main.go
            ALL_BINARIES="bin/monokit2-devel"

            ACTIVE_PLUGINS=(osHealth)
            # Build devel binaries for active plugins
            for PLUGIN_NAME in "${ACTIVE_PLUGINS[@]}" ; do
              cd plugins/$PLUGIN_NAME || exit 1
              go build -tags "$PLUGIN_NAME" -o ../bin/${PLUGIN_NAME}-devel ./main.go
              ALL_BINARIES="$ALL_BINARIES plugins/bin/${PLUGIN_NAME}-devel"
              cd ../..
            done

          fi

          echo "all_binaries=$ALL_BINARIES" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: go-binaries
          path: |
            ${{ steps.build.outputs.all_binaries }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Create normal release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release binary
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.build.outputs.all_binaries }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete existing devel prerelease (if exists)
        run: |
          set -e
          DEVEL_TAG="${GITHUB_REF_NAME}-devel"
          if gh release view "$DEVEL_TAG" &>/dev/null; then
            echo "Deleting existing devel release: $DEVEL_TAG"
            gh release delete "$DEVEL_TAG" --yes
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create devel prerelease
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ github.ref_name }}-devel"
          name: Devel Release ${{ github.ref_name }}
          prerelease: true
          files: ${{ steps.build.outputs.all_binaries }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
